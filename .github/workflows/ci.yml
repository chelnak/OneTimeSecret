name: Process PS Module
on:
  push:
    branches:
      - '**'
    paths:
      - src/**
      - tools/**
      - tests/**
      - .github/workflows/**
    tags:
      - v*
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:

    name: Build module
    runs-on: windows-latest
    steps:

      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.8
        with:
          versionSpec: '5.6.9'

      - name: Determine Version
        id:   gitversion
        uses: gittools/actions/gitversion/execute@v0.9.8
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Execute Build
        run: tools/build.ps1
        shell: pwsh

      - name: Upload Release artifact
        uses: actions/upload-artifact@v2
        with:
          name: Release
          path: ${{ github.workspace }}/Release

      - name: Upload Tools artifact
        uses: actions/upload-artifact@v2
        with:
          name: Tools
          path: ${{ github.workspace }}/tools

      - name: Upload Docs artifact
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: ${{ github.workspace }}/docs

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: "tools/testResults.xml"

  prod_release:

    name: Release module
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: windows-latest
    needs: build

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: "config/changelogConfig.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v2

      - name: Publish Module to PowerShell gallery
        run: .\Tools\Publish-PSModule.ps1 -ApiKey ${{ secrets.PSGalleryApiKey }} -Path ".\Release\OneTimeSecret" -CheckForExistingVersion -Verbose
        shell: pwsh

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: "OneTimeSecret"
          artifacts: ".\\Release\\*.zip"
          body: ${{steps.github_release.outputs.changelog}}
          token: ${{ secrets.GITHUB_TOKEN }}